{"version":3,"file":"static/js/795.acd11577.chunk.js","mappings":"4MACA,EAAuB,mB,SCKvB,EAJa,SAACA,GACZ,OAAOC,EAAAA,EAAAA,KAAA,OAAKC,UAAWC,EAAaC,SAAEJ,EAAMI,UAC9C,E,SCHA,EAAuB,wBAAvB,EAAyD,2BAAzD,EAA8F,2BAA9F,EAAmI,2BCoEnI,EA9DkB,SAACJ,GACjB,IAAAK,GAAoCC,EAAAA,EAAAA,WAAS,GAAMC,GAAAC,EAAAA,EAAAA,GAAAH,EAAA,GAA5CI,EAAUF,EAAA,GAAEG,EAAaH,EAAA,GAE1BI,GAAiBC,EAAAA,EAAAA,UACjBC,GAAeD,EAAAA,EAAAA,UAqBrB,OACEE,EAAAA,EAAAA,MAACC,EAAAA,SAAQ,CAAAX,SAAA,EACPH,EAAAA,EAAAA,KAACe,EAAAA,GAAM,CACLC,KAAMR,EACNS,QAAS,SAACC,GAAQ,MAChB,qEAAqE,KAGzElB,EAAAA,EAAAA,KAACmB,EAAI,CAAAhB,UACHU,EAAAA,EAAAA,MAAA,QACEO,QAdmB,WACzBX,GAAc,EAChB,EAaQR,UAAWC,EACXmB,SA/BR,SAA2BC,GACzBA,EAAMC,iBAEN,IAAMC,EAAgBd,EAAee,QAAQC,MACvCC,EAAcf,EAAaa,QAAQC,MAIzC3B,EAAM6B,WAAW,CAAEC,OAAQL,EAAeM,KAAMH,GAClD,EAsBoCxB,SAAA,CAE3BJ,EAAMgC,YACL/B,EAAAA,EAAAA,KAAA,OAAKC,UAAWC,EAAgBC,UAC9BH,EAAAA,EAAAA,KAACgC,EAAAA,EAAc,OAInBnB,EAAAA,EAAAA,MAAA,OAAKZ,UAAWC,EAAgBC,SAAA,EAC9BH,EAAAA,EAAAA,KAAA,SAAOiC,QAAQ,SAAQ9B,SAAC,YACxBH,EAAAA,EAAAA,KAAA,SAAOkC,KAAK,OAAOC,GAAG,SAASC,IAAK1B,QAEtCG,EAAAA,EAAAA,MAAA,OAAKZ,UAAWC,EAAgBC,SAAA,EAC9BH,EAAAA,EAAAA,KAAA,SAAOiC,QAAQ,OAAM9B,SAAC,UACtBH,EAAAA,EAAAA,KAAA,YAAUmC,GAAG,OAAOE,KAAK,IAAID,IAAKxB,QAEpCZ,EAAAA,EAAAA,KAAA,OAAKC,UAAWC,EAAgBC,UAC9BH,EAAAA,EAAAA,KAAA,UAAQsC,QArCY,WAC5B7B,GAAc,EAChB,EAmCkDR,UAAU,MAAKE,SAAC,uBAMpE,E,kBC3CA,EAjBiB,WACf,IAAAoC,GAAgCC,EAAAA,EAAAA,GAAQC,EAAAA,IAAhCC,EAAWH,EAAXG,YAAaC,EAAMJ,EAANI,OACfC,GAAUC,EAAAA,EAAAA,OAEhBC,EAAAA,EAAAA,YAAU,WACO,cAAXH,GACFC,EAAQG,KAAK,UAEjB,GAAG,CAACJ,EAAQC,IAMZ,OAAO5C,EAAAA,EAAAA,KAACgD,EAAS,CAACjB,UAAsB,YAAXY,EAAsBf,WAJ3B,SAACqB,GACvBP,EAAYO,EACd,GAGF,C","sources":["webpack://react-complete-guide/./src/components/ui/Card.module.css?49cd","components/ui/Card.js","webpack://react-complete-guide/./src/components/quotes/QuoteForm.module.css?b10c","components/quotes/QuoteForm.js","pages/NewQuote.js"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"card\":\"Card_card__48SLx\"};","import classes from './Card.module.css';\n\nconst Card = (props) => {\n  return <div className={classes.card}>{props.children}</div>;\n};\n\nexport default Card;\n","// extracted by mini-css-extract-plugin\nexport default {\"form\":\"QuoteForm_form__ogBoi\",\"loading\":\"QuoteForm_loading__gyIuQ\",\"control\":\"QuoteForm_control__8SqBM\",\"actions\":\"QuoteForm_actions__I8AC6\"};","import { Fragment, useRef, useState } from 'react';\nimport { Prompt } from 'react-router-dom';\n\nimport Card from '../ui/Card';\nimport LoadingSpinner from '../ui/LoadingSpinner';\nimport classes from './QuoteForm.module.css';\n\nconst QuoteForm = (props) => {\n  const [isEntering, setIsEntering] = useState(false);\n\n  const authorInputRef = useRef();\n  const textInputRef = useRef();\n\n  function submitFormHandler(event) {\n    event.preventDefault();\n\n    const enteredAuthor = authorInputRef.current.value;\n    const enteredText = textInputRef.current.value;\n\n    // optional: Could validate here\n\n    props.onAddQuote({ author: enteredAuthor, text: enteredText });\n  }\n\n  const finishEnteringHandler = () => {\n    setIsEntering(false);\n  };\n\n  const formFocusedHandler = () => {\n    setIsEntering(true);\n  };\n\n  return (\n    <Fragment>\n      <Prompt\n        when={isEntering}\n        message={(location) =>\n          'Are you sure you want to leave? All your entered data will be lost!'\n        }\n      />\n      <Card>\n        <form\n          onFocus={formFocusedHandler}\n          className={classes.form}\n          onSubmit={submitFormHandler}\n        >\n          {props.isLoading && (\n            <div className={classes.loading}>\n              <LoadingSpinner />\n            </div>\n          )}\n\n          <div className={classes.control}>\n            <label htmlFor='author'>Author</label>\n            <input type='text' id='author' ref={authorInputRef} />\n          </div>\n          <div className={classes.control}>\n            <label htmlFor='text'>Text</label>\n            <textarea id='text' rows='5' ref={textInputRef}></textarea>\n          </div>\n          <div className={classes.actions}>\n            <button onClick={finishEnteringHandler} className='btn'>Add Quote</button>\n          </div>\n        </form>\n      </Card>\n    </Fragment>\n  );\n};\n\nexport default QuoteForm;\n","import { useEffect } from 'react';\nimport { useHistory } from 'react-router-dom';\n\nimport QuoteForm from '../components/quotes/QuoteForm';\nimport useHttp from '../hooks/use-http';\nimport { addQuote } from '../lib/api';\n\nconst NewQuote = () => {\n  const { sendRequest, status } = useHttp(addQuote);\n  const history = useHistory();\n\n  useEffect(() => {\n    if (status === 'completed') {\n      history.push('/quotes');\n    }\n  }, [status, history]);\n\n  const addQuoteHandler = (quoteData) => {\n    sendRequest(quoteData);\n  };\n\n  return <QuoteForm isLoading={status === 'pending'} onAddQuote={addQuoteHandler} />;\n};\n\nexport default NewQuote;\n"],"names":["props","_jsx","className","classes","children","_useState","useState","_useState2","_slicedToArray","isEntering","setIsEntering","authorInputRef","useRef","textInputRef","_jsxs","Fragment","Prompt","when","message","location","Card","onFocus","onSubmit","event","preventDefault","enteredAuthor","current","value","enteredText","onAddQuote","author","text","isLoading","LoadingSpinner","htmlFor","type","id","ref","rows","onClick","_useHttp","useHttp","addQuote","sendRequest","status","history","useHistory","useEffect","push","QuoteForm","quoteData"],"sourceRoot":""}